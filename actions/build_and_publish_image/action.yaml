name: 'Build and Publish Image'
description: 'Builds and publishes a docker image'

inputs:
  tag:
    description: Image tag
    required: true
  dockerfile:
    description: Location of the dockerfile
    required: false
    default: './Dockerfile'
  build_config:
    description: A list of environment variables to pass as build args to the build step
    required: false
    default: ""
  build_context:
    description: Location for docker's build context
    required: false
    default: '.'
  build_args:
    description: Additional agruments to pass to docker build
    required: false
    default: ''
  push_args:
    description: Additional arguments to pass to docker push
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Translate Build Config to Build Commands
      id: build_config
      shell: bash
      run: |
        build_config="${{ inputs.build_config }}"
        if [ -n $build_config ]
        then
          echo $build_config | grep -v '^[[:space:]]*$'  >> temp.txt
          arg_list=$(awk -F: '{print "--build-args "$1"="$2}' temp.txt)
          cleaned_args=${arg_list//= /=}
          echo "set-output name=additional_build_args::$(echo $cleaned_args | tr '\n' ' ')"
        else
          echo "set-output name=additional_build_args::\"
        fi


    - name: Build Image
      shell: bash
      run: |
        docker build \
        --tag ${{ inputs.tag }} \
        ${{ steps.build_config.outputs.additional_build_args }}
        ${{ inputs.build_args }} \
        --file ${{ inputs.dockerfile }} \
        ${{ inputs.build_context }}

    - name: Configure GCP Docker Registry
      if: "${{ contains(inputs.tag, 'gcr.io') }}"
      shell: bash
      run: gcloud auth configure-docker

    - name: Publish Image
      shell: bash
      run: docker push ${{ inputs.tag }}