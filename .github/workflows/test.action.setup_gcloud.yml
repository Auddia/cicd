name: '[Action Test] setup_gcloud '

on:
  workflow_dispatch:
    inputs:
      gcp_secret:
        description: 'GCP Secret'
        required: true

jobs:
  gcloud_no_secrets:
    name: 'GCloud Setup'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: 'GCloud SDK Setup'
        uses: ./actions/setup_gcloud
        with:
          gcp_credentials: ${{ github.event.inputs.gcp_secret }}

      - name: 'Test SDK'
        shell: bash
        run: gcloud info

      - name: 'Test Has Sercets'
        shell: bash
        run: |
          source ./scripts/test_functions.sh

          has_secrets=${{ steps.gcp.outputs.has_secrets }}
          fail_if_strings_unequal $has_secrets "false"

  gcloud_with_secrets:
    name: 'GCloud Setup w/ Secrets'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: 'GCloud SDK Setup'
        id: gcp
        uses: ./actions/setup_gcloud
        with:
          gcp_credentials: ${{ github.event.inputs.gcp_secret }}
          gcp_secrets: |
            TEST_ONE: projects/vodacast-staging/secrets/vodacast-postgres-password
            TEST_TWO: projects/vodacast-staging/secrets/vodacast-postgres-password

      - name: 'Test SDK'
        shell: bash
        run: gcloud info

      - name: 'Test Secrets Avaiablity'
        shell: bash
        run: |
          source ./scripts/test_functions.sh

          has_secrets=${{ steps.gcp.outputs.has_secrets }}
          fail_if_strings_unequal $has_secrets "true"

          secrets=${{ toJson(steps.gcp.outputs.secrets) }}
          fail_if_strings_equal $secrets "{}"

          test_one=${{ fromJson(steps.gcp.outputs.secrets).TEST_ONE }}
          test_two=${{ fromJson(steps.gcp.outputs.secrets)['TEST_TWO'] }}

          fail_if_empty_string "$test_one"
          fail_if_empty_string "$test_two"
